// Generated by Haxe 3.4.2
if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function () { "use strict";
var Main = function() { };
Main.main = function() {
	electron_CrashReporter.start({ companyName : "Monk Markdown Editor", submitURL : "https://github.com/MatthijsKamstra/hx-markdown-editor/issues"});
	var mainWindow = null;
	electron_main_App.on("window_all_closed",function(e) {
		if(process.platform != "darwin") {
			electron_main_App.quit();
		}
	});
	electron_main_App.on("ready",function(e1) {
		mainWindow = new electron_main_BrowserWindow({ width : 1200, height : 800, backgroundColor : "#2e2c29", titleBarStyle : "hidden"});
		mainWindow.on("closed",function() {
			if(process.platform != "darwin") {
				electron_main_App.quit();
			}
			mainWindow = null;
		});
		mainWindow.webContents.openDevTools();
		mainWindow.loadURL("file://" + __dirname + "/index.html");
		new MainMenu();
		electron_main_IpcMain.on("test",function(event,test) {
			var content = "Some text to save into the file";
		});
		electron_main_IpcMain.on("OpenDialog",function(event1) {
			electron_main_Dialog.showOpenDialog(null,{ },function(fileNames) {
				console.log(fileNames);
				if(fileNames == null) {
					console.log("No file selected");
					return;
				}
				var filepath = fileNames[0];
				js_node_Fs.readFile(filepath,"utf-8",function(err,data) {
					if(err != null) {
						console.log("An error ocurred reading the file :" + err.message);
						return;
					}
					event1.sender.send("SEND_FILE_CONTENT",filepath,data);
				});
			});
		});
		electron_main_IpcMain.on("SAVE_FILE",function(event2,filepath1,content1) {
			js_node_Fs.writeFile(filepath1,content1,function(err1) {
				if(err1 != null) {
					console.log("An error ocurred updating the file" + err1.message);
					console.log(err1);
					return;
				}
				console.log("The file has been succesfully saved");
			});
		});
		electron_main_IpcMain.on("asynchronous-message",function(event3,arg) {
			console.log(arg);
			event3.sender.send("asynchronous-reply","pong");
		});
		electron_main_IpcMain.on("synchronous-message",function(event4,arg1) {
			console.log(arg1);
			event4.returnValue = "pong";
		});
		electron_main_IpcMain.on("doorBell",function(event5,arg2) {
			console.log(arg2);
			event5.returnValue = "dong";
		});
	});
};
var MainMenu = function() {
	var template = [{ label : "File", submenu : [{ label : "New File", accelerator : "CmdOrCtrl+N"},{ type : "separator"},{ label : "Open...", accelerator : "CmdOrCtrl+O"},{ type : "separator"},{ label : "Save", accelerator : "CmdOrCtrl+S"},{ label : "Save As...", accelerator : "Shift+CmdOrCtrl+S"},{ label : "Save all", accelerator : "Alt+CmdOrCtrl+S"}]},{ label : "Edit", submenu : [{ label : "Undo", accelerator : "CmdOrCtrl+Z", role : "undo"},{ label : "Redo", accelerator : "Shift+CmdOrCtrl+Z", role : "redo"},{ label : "Cut", accelerator : "CmdOrCtrl+X", role : "cut"},{ label : "Copy", accelerator : "CmdOrCtrl+C", role : "copy"},{ label : "Paste", accelerator : "CmdOrCtrl+V", role : "paste"},{ label : "Select All", accelerator : "CmdOrCtrl+A", role : "selectall"}]},{ label : "View", submenu : [{ role : "reload"},{ role : "forcereload"},{ role : "toggledevtools"},{ type : "separator"},{ role : "resetzoom"},{ role : "zoomin"},{ role : "zoomout"},{ type : "separator"},{ role : "togglefullscreen"}]},{ role : "window", submenu : [{ role : "minimize"},{ role : "close"}]},{ role : "help", submenu : [{ label : "Learn More"}]}];
	if(process.platform == "darwin") {
		template.unshift({ label : electron_main_App.getName(), submenu : [{ role : "about"},{ type : "separator"},{ role : "services"},{ type : "separator"},{ role : "hide"},{ role : "hideothers"},{ role : "unhide"},{ type : "separator"},{ role : "quit"}]});
	}
	var menu = electron_main_Menu.buildFromTemplate(template);
	electron_main_Menu.setApplicationMenu(menu);
};
var electron_CrashReporter = require("electron").crashReporter;
var electron_main_App = require("electron").app;
var electron_main_BrowserWindow = require("electron").BrowserWindow;
var electron_main_Dialog = require("electron").dialog;
var electron_main_IpcMain = require("electron").ipcMain;
var electron_main_Menu = require("electron").Menu;
var haxe_io_Bytes = function() { };
var js_node_Fs = require("fs");
var js_node_buffer_Buffer = require("buffer").Buffer;
Main.main();
})();

//# sourceMappingURL=main.js.map