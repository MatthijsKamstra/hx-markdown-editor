// Generated by Haxe 3.4.2
(function () { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var AppMain = function() {
	this.shortCuts = JSON.parse(haxe_Resource.getString("key"));
	this.markdowExample2 = haxe_Resource.getString("markdown02");
	this.currentFileName = "monk";
	this.isElectron = false;
	window.console.info("This project is a WIP-sideproject written in Haxe (www.haxe.org)");
	window.console.info("For more info about this markdown editor check https://github.com/MatthijsKamstra/hx-markdown-editor");
	this.isElectron = false;
	this.init();
};
AppMain.__name__ = true;
AppMain.main = function() {
	var app = new AppMain();
};
AppMain.prototype = {
	init: function() {
		var _gthis = this;
		$(function() {
			_gthis.initEditors();
			_gthis.initShortcuts();
			window.document.getElementById("btn-open").addEventListener("click",$bind(_gthis,_gthis.openHandler),false);
			window.document.getElementById("file-upload").addEventListener("change",$bind(_gthis,_gthis.openHandler));
			window.document.getElementById("btn-save").addEventListener("click",$bind(_gthis,_gthis.saveHandler),false);
			window.document.getElementById("btn-fullscreen").addEventListener("click",$bind(_gthis,_gthis.fullscreenHandler),false);
			window.document.getElementById("btn-preview").addEventListener("click",$bind(_gthis,_gthis.previewHandler),false);
			_gthis.toggleOpenBtn();
			window.addEventListener("resize",$bind(_gthis,_gthis.resizeHandler));
			_gthis.resizeHandler(null);
			_gthis.setMonkDocumentTitle("Monk Markdown Editor");
		});
	}
	,setMonkDocumentTitle: function(title) {
		var widowtitle = window.document.getElementsByClassName("window-title")[0];
		widowtitle.innerText = title;
	}
	,toggleOpenBtn: function() {
		var electronContainer = window.document.getElementById("container-btn-open-electron");
		var browserContainer = window.document.getElementById("container-btn-open-browser");
		electronContainer.style.display = "none";
		browserContainer.style.display = "initial";
	}
	,resizeHandler: function(e) {
		var myWidth = window.innerWidth;
		var myHeight = window.innerHeight;
		var offset = 23;
		window.document.getElementById("monk_markdown_container").setAttribute("data-comment","w:" + myWidth + "px, h:" + myHeight + "px");
		window.document.getElementById("workbench_parts_title");
		window.document.getElementById("workbench_parts_editor_container").setAttribute("style","width:100%; height:" + (myHeight - offset) + "px;");
		window.document.getElementById("workbench_parts_editor_container").setAttribute("data-comment","w:" + myWidth + "px, h:" + (myHeight - offset) + "px");
		console.log("width: " + myWidth + ", height: " + myHeight);
	}
	,initEditors: function() {
		this.inMarkdown = window.document.createElement("textarea");
		this.inMarkdown.id = "in_markdown_default";
		this.inMarkdown.className = "in-markdown";
		this.inMarkdown.cols = 30;
		this.inMarkdown.rows = 10;
		window.document.getElementById("workbench_parts_editor_one").appendChild(this.inMarkdown);
		this.outMarkdown = window.document.createElement("div");
		this.outMarkdown.id = "out_markdown_default";
		this.outMarkdown.className = "out-markdown";
		if(window.document.getElementById("workbench_parts_editor_two") != null) {
			window.document.getElementById("workbench_parts_editor_two").appendChild(this.outMarkdown);
		}
		var md = this.markdowExample2;
		this.set_inMarkdownValue(md);
		this.set_outMarkdownValue(md);
		this.editor = CodeMirror.fromTextArea(this.inMarkdown,{ tabSize : "2", indentWithTabs : true, lineWrapping : true, extraKeys : { "Enter" : "newlineAndIndentContinueMarkdownList"}, mode : "markdown", tabMode : "indent", theme : "monk"});
	}
	,initShortcuts: function(keys) {
		var _gthis = this;
		this.keyMarkdown = "Keyboard Shortcuts\n\n";
		this.keyMarkdown += "| Command | Keybinding | Shortcut OsX | Electron | CodeMirror |\n";
		this.keyMarkdown += "| ------- | ---------- | :----------: | :------: | :--------: |\n";
		var map = { "Alt-Space" : function(cm) {
			_gthis.onKeyMappedHandler("boo");
		}};
		var _g1 = 0;
		var _g = this.shortCuts.length;
		while(_g1 < _g) {
			var i = _g1++;
			var item = [this.shortCuts[i]];
			map[item[0].key] = (function(item1) {
				return function(cm1) {
					_gthis.onKeyMappedHandler(item1[0].action);
				};
			})(item);
			this.keyMarkdown += "| " + item[0].action + " | " + item[0].key + " | " + this.replaceString2Symbols(item[0].key) + " | x | " + item[0].key + " |\n";
		}
		this.editor.addKeyMap(map);
	}
	,replaceString2Symbols: function(keybinding) {
		var str = "`" + StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(StringTools.replace(keybinding,"Cmd","⌘"),"Alt","⌥"),"Ctrl","⌃"),"Shift","⇧"),"-","` `") + "`";
		return StringTools.replace(str,"``","`");
	}
	,onKeyMappedHandler: function(value) {
		switch(value) {
		case "blockquote":
			this.insertBefore("> ",3);
			break;
		case "bold":
			this.insertAround("**","**");
			break;
		case "codeblock":
			this.insertAround("```\r\n","\r\n```");
			break;
		case "comment":
			this.insertAround("<!-- "," -->");
			break;
		case "fullscreen":
			this.fullscreenHandler();
			break;
		case "header0":
			this.insertBefore("",2);
			break;
		case "header1":
			this.insertBefore("# ",2);
			break;
		case "header2":
			this.insertBefore("## ",3);
			break;
		case "header3":
			this.insertBefore("### ",4);
			break;
		case "header4":
			this.insertBefore("#### ",5);
			break;
		case "header5":
			this.insertBefore("##### ",6);
			break;
		case "header6":
			this.insertBefore("###### ",7);
			break;
		case "hr":
			this.insert("\n\n----\n\n");
			break;
		case "image":
			this.insertBefore("![](http://)",2);
			break;
		case "inlinecode":
			this.insertAround("`","`");
			break;
		case "italic":
			this.insertAround("_","_");
			break;
		case "link":
			this.insertAround("[","](http://)");
			break;
		case "open":
			console.log(value);
			break;
		case "orderedlist":
			this.insertBefore("1. ",3);
			break;
		case "preview":
			console.log(value);
			break;
		case "save":
			this.saveHandler(null);
			break;
		case "table":
			this.insert("| colum 1 | colum 2 |\n| :--: | :--: |\n| a | b |\n| c | d |\n");
			break;
		case "unorderedlist":
			this.insertBefore("* ",3);
			break;
		default:
			console.log("not sure what you want: " + value);
		}
	}
	,saveHandler: function(e) {
		this.onBrowserSaveHandler(e);
	}
	,openHandler: function(e) {
		this.onBrowserFileOpenHandler(e);
	}
	,previewHandler: function() {
		console.log("previewHandler");
	}
	,fullscreenHandler: function() {
		console.log("fullscreenHandler");
		var doc = window.document;
		var el = window.document.documentElement;
		if(!AppMain.IS_FULL_SCREEN) {
			if($bind(el,el.requestFullscreen) != null) {
				el.requestFullscreen();
			} else if(el.webkitRequestFullscreen) {
				el.webkitRequestFullscreen();
			} else if(el.mozRequestFullScreen) {
				el.mozRequestFullScreen();
			} else if(el.msRequestFullscreen) {
				el.msRequestFullscreen();
			}
			AppMain.IS_FULL_SCREEN = true;
		} else {
			if(doc.cancelFullScreen) {
				doc.cancelFullScreen();
			} else if(doc.mozCancelFullScreen) {
				doc.mozCancelFullScreen();
			} else if(doc.webkitCancelFullScreen) {
				doc.webkitCancelFullScreen();
			}
			AppMain.IS_FULL_SCREEN = false;
		}
	}
	,insert: function(insertion) {
		var doc = this.editor.getDoc();
		var cursor = doc.getCursor();
		doc.replaceRange(insertion,{ line : cursor.line, ch : cursor.ch});
	}
	,insertAround: function(start,end) {
		var doc = this.editor.getDoc();
		var cursor = doc.getCursor();
		if(doc.somethingSelected()) {
			var selection = doc.getSelection();
			doc.replaceSelection(start + selection + end);
		} else {
			doc.replaceRange(start + end,{ line : cursor.line, ch : cursor.ch});
			doc.setCursor({ line : cursor.line, ch : cursor.ch + start.length});
		}
	}
	,insertBefore: function(insertion,cursorOffset) {
		var doc = this.editor.getDoc();
		var cursor = doc.getCursor();
		if(doc.somethingSelected()) {
			var selections = doc.listSelections();
			console.log(selections);
			var pos = [selections[0].head.line,selections[0].anchor.line];
			pos.sort(function(a,b) {
				if(a < b) {
					return -1;
				} else if(a > b) {
					return 1;
				}
				return 0;
			});
			var _g1 = pos[0];
			var _g = pos[1] + 1;
			while(_g1 < _g) {
				var i = _g1++;
				doc.replaceRange(insertion,{ line : i, ch : 0});
			}
			doc.setCursor({ line : pos[0], ch : cursorOffset != null ? cursorOffset : 0});
		} else {
			console.log("check hier");
			doc.setSelection({ line : cursor.line, ch : cursor.ch},{ line : cursor.line, ch : 0});
			var selection = doc.getSelection();
			doc.replaceSelection(insertion + StringTools.trim(StringTools.replace(StringTools.replace(selection,"#",""),insertion,"")));
		}
	}
	,setWorkbench: function(content) {
		this.set_inMarkdownValue(content);
		this.set_outMarkdownValue(content);
		this.editor.setValue(content);
		this.editor.focus();
	}
	,onBrowserFileOpenHandler: function(e) {
		var _gthis = this;
		var file = e.target.files[0];
		if(file == null) {
			return;
		}
		this.currentFileName = file.name;
		this.setMonkDocumentTitle(this.currentFileName);
		var reader = new FileReader();
		reader.onload = function(e1) {
			var content = e1.target.result;
			_gthis.setWorkbench(content);
		};
		reader.readAsText(file);
	}
	,onBrowserSaveHandler: function(e) {
		if(e != null) {
			e.preventDefault();
		}
		if(e != null) {
			e.stopPropagation();
		}
		var text = this.editor.getValue();
		var date = DateTools.format(new Date(),"%Y-%m-%d_%H:%M:%S");
		var blob = new Blob([text],{ type : "text/plain;charset=utf-8"});
		saveAs(blob,"" + this.currentFileName + "_" + date + ".md");
	}
	,set_inMarkdownValue: function(value) {
		this.inMarkdown.innerHTML = value;
		return this.inMarkdownValue = value;
	}
	,set_outMarkdownValue: function(value) {
		this.outMarkdown.innerHTML = this.convertToMarkdown(value);
		return this.outMarkdownValue = value;
	}
	,convertToMarkdown: function(md) {
		var result = markdownit().render(md);
		return result;
	}
};
var DateTools = function() { };
DateTools.__name__ = true;
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new js__$Boot_HaxeError("Date.format %" + e + "- not implemented yet.");
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len1 = f.length - p;
	r_b += len1 == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len1);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var haxe_Resource = function() { };
haxe_Resource.__name__ = true;
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
};
var haxe_crypto_Base64 = function() { };
haxe_crypto_Base64.__name__ = true;
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
haxe_crypto_BaseCode.__name__ = true;
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = ["Date"];
haxe_Resource.content = [{ name : "markdown00", data : "IyBBbiBleGhpYml0IG9mIE1hcmtkb3duCgpUaGlzIG5vdGUgZGVtb25zdHJhdGVzIHNvbWUgb2Ygd2hhdCBbTWFya2Rvd25dWzFdIGlzIGNhcGFibGUgb2YgZG9pbmcuCgoqTm90ZTogRmVlbCBmcmVlIHRvIHBsYXkgd2l0aCB0aGlzIHBhZ2UuIFVubGlrZSByZWd1bGFyIG5vdGVzLCB0aGlzIGRvZXNuJ3QgYXV0b21hdGljYWxseSBzYXZlIGl0c2VsZi4qCgojIyBCYXNpYyBmb3JtYXR0aW5nCgpQYXJhZ3JhcGhzIGNhbiBiZSB3cml0dGVuIGxpa2Ugc28uIEEgcGFyYWdyYXBoIGlzIHRoZSBiYXNpYyBibG9jayBvZiBNYXJrZG93bi4gQSBwYXJhZ3JhcGggaXMgd2hhdCB0ZXh0IHdpbGwgdHVybiBpbnRvIHdoZW4gdGhlcmUgaXMgbm8gcmVhc29uIGl0IHNob3VsZCBiZWNvbWUgYW55dGhpbmcgZWxzZS4KClBhcmFncmFwaHMgbXVzdCBiZSBzZXBhcmF0ZWQgYnkgYSBibGFuayBsaW5lLiBCYXNpYyBmb3JtYXR0aW5nIG9mICppdGFsaWNzKiBhbmQgKipib2xkKiogaXMgc3VwcG9ydGVkLiBUaGlzICpjYW4gYmUgKipuZXN0ZWQqKiBsaWtlKiBzby4KCiMjIExpc3RzCgojIyMgT3JkZXJlZCBsaXN0CgoxLiBJdGVtIDEKMi4gQSBzZWNvbmQgaXRlbQozLiBOdW1iZXIgMwo0LiDihaMKCipOb3RlOiB0aGUgZm91cnRoIGl0ZW0gdXNlcyB0aGUgVW5pY29kZSBjaGFyYWN0ZXIgZm9yIFtSb21hbiBudW1lcmFsIGZvdXJdWzJdLioKCiMjIyBVbm9yZGVyZWQgbGlzdAoKKiBBbiBpdGVtCiogQW5vdGhlciBpdGVtCiogWWV0IGFub3RoZXIgaXRlbQoqIEFuZCB0aGVyZSdzIG1vcmUuLi4KCiMjIFBhcmFncmFwaCBtb2RpZmllcnMKCiMjIyBDb2RlIGJsb2NrCgogICAgQ29kZSBibG9ja3MgYXJlIHZlcnkgdXNlZnVsIGZvciBkZXZlbG9wZXJzIGFuZCBvdGhlciBwZW9wbGUgd2hvIGxvb2sgYXQgY29kZSBvciBvdGhlciB0aGluZ3MgdGhhdCBhcmUgd3JpdHRlbiBpbiBwbGFpbiB0ZXh0LiBBcyB5b3UgY2FuIHNlZSwgaXQgdXNlcyBhIGZpeGVkLXdpZHRoIGZvbnQuCgpZb3UgY2FuIGFsc28gbWFrZSBgaW5saW5lIGNvZGVgIHRvIGFkZCBjb2RlIGludG8gb3RoZXIgdGhpbmdzLgoKIyMjIFF1b3RlCgo+IEhlcmUgaXMgYSBxdW90ZS4gV2hhdCB0aGlzIGlzIHNob3VsZCBiZSBzZWxmIGV4cGxhbmF0b3J5LiBRdW90ZXMgYXJlIGF1dG9tYXRpY2FsbHkgaW5kZW50ZWQgd2hlbiB0aGV5IGFyZSB1c2VkLgoKIyMgSGVhZGluZ3MKClRoZXJlIGFyZSBzaXggbGV2ZWxzIG9mIGhlYWRpbmdzLiBUaGV5IGNvcnJlc3BvbmQgd2l0aCB0aGUgc2l4IGxldmVscyBvZiBIVE1MIGhlYWRpbmdzLiBZb3UndmUgcHJvYmFibHkgbm90aWNlZCB0aGVtIGFscmVhZHkgaW4gdGhlIHBhZ2UuIEVhY2ggbGV2ZWwgZG93biB1c2VzIG9uZSBtb3JlIGhhc2ggY2hhcmFjdGVyLgoKIyMjIEhlYWRpbmdzICpjYW4qIGFsc28gY29udGFpbiAqKmZvcm1hdHRpbmcqKgoKIyMjIFRoZXkgY2FuIGV2ZW4gY29udGFpbiBgaW5saW5lIGNvZGVgCgpPZiBjb3Vyc2UsIGRlbW9uc3RyYXRpbmcgd2hhdCBoZWFkaW5ncyBsb29rIGxpa2UgbWVzc2VzIHVwIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIHBhZ2UuCgpJIGRvbid0IHJlY29tbWVuZCB1c2luZyBtb3JlIHRoYW4gdGhyZWUgb3IgZm91ciBsZXZlbHMgb2YgaGVhZGluZ3MgaGVyZSwgYmVjYXVzZSwgd2hlbiB5b3UncmUgc21hbGxlc3QgaGVhZGluZyBpc24ndCB0b28gc21hbGwsIGFuZCB5b3UncmUgbGFyZ2VzdCBoZWFkaW5nIGlzbid0IHRvbyBiaWcsIGFuZCB5b3Ugd2FudCBlYWNoIHNpemUgdXAgdG8gbG9vayBub3RpY2VhYmx5IGxhcmdlciBhbmQgbW9yZSBpbXBvcnRhbnQsIHRoZXJlIHRoZXJlIGFyZSBvbmx5IHNvIG1hbnkgc2l6ZXMgdGhhdCB5b3UgY2FuIHVzZS4KCiMjIFVSTHMKClVSTHMgY2FuIGJlIG1hZGUgaW4gYSBoYW5kZnVsIG9mIHdheXM6CgoqIEEgbmFtZWQgbGluayB0byBbTWFya0l0RG93bl1bM10uIFRoZSBlYXNpZXN0IHdheSB0byBkbyB0aGVzZSBpcyB0byBzZWxlY3Qgd2hhdCB5b3Ugd2FudCB0byBtYWtlIGEgbGluayBhbmQgaGl0IGBDdHJsK0xgLgoqIEFub3RoZXIgbmFtZWQgbGluayB0byBbTWFya0l0RG93bl0oaHR0cDovL3d3dy5tYXJraXRkb3duLm5ldC8pCiogU29tZXRpbWVzIHlvdSBqdXN0IHdhbnQgYSBVUkwgbGlrZSA8aHR0cDovL3d3dy5tYXJraXRkb3duLm5ldC8+LgoKIyMgSG9yaXpvbnRhbCBydWxlCgpBIGhvcml6b250YWwgcnVsZSBpcyBhIGxpbmUgdGhhdCBnb2VzIGFjcm9zcyB0aGUgbWlkZGxlIG9mIHRoZSBwYWdlLgoKLS0tCgpJdCdzIHNvbWV0aW1lcyBoYW5keSBmb3IgYnJlYWtpbmcgdGhpbmdzIHVwLgoKIyMgSW1hZ2VzCgpNYXJrZG93biBjYW4gYWxzbyBjb250YWluIGltYWdlcy4gSSdsbCBuZWVkIHRvIGFkZCBzb21ldGhpbmcgaGVyZSBzb21ldGltZS4KCiMjIEZpbmFsbHkKClRoZXJlJ3MgYWN0dWFsbHkgYSBsb3QgbW9yZSB0byBNYXJrZG93biB0aGFuIHRoaXMuIFNlZSB0aGUgb2ZmaWNpYWwgW2ludHJvZHVjdGlvbl1bNF0gYW5kIFtzeW50YXhdWzVdIGZvciBtb3JlIGluZm9ybWF0aW9uLiBIb3dldmVyLCBiZSBhd2FyZSB0aGF0IHRoaXMgaXMgbm90IHVzaW5nIHRoZSBvZmZpY2lhbCBpbXBsZW1lbnRhdGlvbiwgYW5kIHRoaXMgbWlnaHQgd29yayBzdWJ0bHkgZGlmZmVyZW50bHkgaW4gc29tZSBvZiB0aGUgbGl0dGxlIHRoaW5ncy4KCgogIFsxXTogaHR0cDovL2RhcmluZ2ZpcmViYWxsLm5ldC9wcm9qZWN0cy9tYXJrZG93bi8KICBbMl06IGh0dHA6Ly93d3cuZmlsZWZvcm1hdC5pbmZvL2luZm8vdW5pY29kZS9jaGFyLzIxNjMvaW5kZXguaHRtCiAgWzNdOiBodHRwOi8vd3d3Lm1hcmtpdGRvd24ubmV0LwogIFs0XTogaHR0cDovL2RhcmluZ2ZpcmViYWxsLm5ldC9wcm9qZWN0cy9tYXJrZG93bi9iYXNpY3MKICBbNV06IGh0dHA6Ly9kYXJpbmdmaXJlYmFsbC5uZXQvcHJvamVjdHMvbWFya2Rvd24vc3ludGF4Cg"},{ name : "markdown02", data : "IyBNb25rIE1hcmtkb3duIEVkaXRvcgoKbGluZSBvbmUKbGluZSB0d28KbGluZSB0aHJlZQpsaW5lIGZvdXIKCgojIGxpc3RzCgpxdWljayAodW5vcmRlcmVkKSBsaXN0OiBgY21kYCArIGBsYAoKdW5vcmRlcmVkIGxpc3Q6IGBzaGlmdGAgKyBgY21kYCArIGB1YAoKb3JkZXJlZCBsaXN0OiBgc2hpZnRgICsgYGNtZGAgKyBgb2AKCgpqdXN0IGJlY2F1c2Ugd2UgY2FuCgpsaW5lIG9uZQpsaW5lIHR3bwpsaW5lIHRocmVlCmxpbmUgZm91cgoKCiMgaGVhZGluZwoKVGVzdCB0aGUga2V5Ym9hcmQgc2hvcnRjdXRzIGZvciBoZWFkaW5nczogYGNtZGAgKyBgMWAgKDEsMiwzLDQsNSw2KQoKaGVhZGluZyAxCgpoZWFkaW5nIDIKCmhlYWRpbmcgMwoKaGVhZGluZyA0CgpoZWFkaW5nIDUKCmhlYWRpbmcgNgoKIyBiYXNpYyBmb3JtYXQKClRlc3QgdGhlIGtleWJvYXJkIHNob3J0Y3V0cwoKLSBib2xkIChzdHJvbmcpOiBgY21kYCArIGBiYAotIGl0YWxpYyAoZW1waGFzaXMpOiBgY21kYCArIGBpYAotIGlubGluZSBjb2RlOiBgY21kYCArIGBrYAotIGNvbW1lbnQ6IGBjbWRgICsgYC9gCgojIGxpc3RzCgpxdWljayAodW5vcmRlcmVkKSBsaXN0OiBgY21kYCArIGBsYAoKdW5vcmRlcmVkIGxpc3Q6IGBzaGlmdGAgKyBgY21kYCArIGB1YAoKb3JkZXJlZCBsaXN0OiBgc2hpZnRgICsgYGNtZGAgKyBgb2AKCgpqdXN0IGJlY2F1c2Ugd2UgY2FuCgpsaW5lIG9uZQpsaW5lIHR3bwpsaW5lIHRocmVlCmxpbmUgZm91cgoKIyBibG9jayBxdW90ZQoKYmxvY2sgcXVvdGU6IGBzaGlmdGAgKyBgY21kYCArIGBiYAoKdGhpcyBpcyBhIHF1b3RlCgojIGxpbmsKCmNyZWF0ZSBhIGxpbms6IGBzaGlmdGAgKyBgY21kYCArIGBsYAoKaHR0cDovL3d3dy5tYXR0aGlqc2thbXN0cmEubmwKCiMgaW1hZ2UKCmNyZWF0ZSBhIGltYWdlOiBgc2hpZnRgICsgYGNtZGAgKyBgaWAKCmh0dHA6Ly9tYXR0aGlqc2thbXN0cmEubmwvcGhvdG9zL2JvdHMvNjQwLzEwX0lNR180MTY1LmpwZwoKCg"},{ name : "markdown01", data : "IyBoZWFkaW5nIDEKCnRoaXMgaXMgYSB0ZXN0IHBpZWNlIG9mIHRleHQganVzdCBmb3IgdGVzdGluZwoKIyMgaGVhZGluZyAyCgpqdXN0IGJlY2F1c2Ugd2UgY2FuCi0gb25lCi0gdHdvCgo"},{ name : "key", data : "WwoKCXsKCQkia2V5IiA6ICJDbWQtUyIsCgkJImFjdGlvbiIgOiAic2F2ZSIsCgkJImljb24iIDogImZhIGZhLWZsb3BweS1vIgoJfSx7CgkJImtleSIgOiAiQ21kLU8iLAoJCSJhY3Rpb24iIDogIm9wZW4iLAoJCSJpY29uIiA6ICJmYSBmYS1maWxlLXRleHQtbyIKCX0sewoJCSJrZXkiIDogIkNtZC1GIiwKCQkiYWN0aW9uIiA6ICJmdWxsc2NyZWVuIiwKCQkiaWNvbiIgOiAiZmEtYXJyb3dzLWFsdCIKCX0sewoJCSJrZXkiIDogIkNtZC1FIiwKCQkiYWN0aW9uIiA6ICJwcmV2aWV3IiwKCQkiaWNvbiIgOiAiZmEtZXllIgoJfSwKCgoJewoJCSJrZXkiIDogIkNtZC0xIiwKCQkiYWN0aW9uIiA6ICJoZWFkZXIxIgoJfSx7CgkJImtleSIgOiAiQ21kLTIiLAoJCSJhY3Rpb24iIDogImhlYWRlcjIiCgl9LHsKCQkia2V5IiA6ICJDbWQtMyIsCgkJImFjdGlvbiIgOiAiaGVhZGVyMyIKCX0sewoJCSJrZXkiIDogIkNtZC00IiwKCQkiYWN0aW9uIiA6ICJoZWFkZXI0IgoJfSx7CgkJImtleSIgOiAiQ21kLTUiLAoJCSJhY3Rpb24iIDogImhlYWRlcjUiCgl9LHsKCQkia2V5IiA6ICJDbWQtNiIsCgkJImFjdGlvbiIgOiAiaGVhZGVyNiIKCX0sewoJCSJrZXkiIDogIkNtZC0wIiwKCQkiYWN0aW9uIiA6ICJoZWFkZXIwIgoJfSx7CgkJImtleSIgOiAiQ21kLUIiLAoJCSJhY3Rpb24iIDogImJvbGQiCgl9LHsKCQkia2V5IiA6ICJDbWQtSSIsCgkJImFjdGlvbiIgOiAiaXRhbGljIgoJfSx7CgkJImtleSIgOiAiQ21kLUsiLAoJCSJhY3Rpb24iIDogImlubGluZWNvZGUiCgl9LHsKCQkia2V5IiA6ICJTaGlmdC1DbWQtSyIsCgkJImFjdGlvbiIgOiAiY29kZWJsb2NrIgoJfSx7CgkJImtleSIgOiAiQ21kLS8iLAoJCSJhY3Rpb24iIDogICJjb21tZW50IgoJfSx7CgkJImtleSIgOiAiQ21kLUgiLAoJCSJhY3Rpb24iIDogImhyIgoJfSx7CgkJImtleSIgOiAiQ21kLUwiLAoJCSJhY3Rpb24iIDogInVub3JkZXJlZGxpc3QiCgl9LHsKCQkia2V5IiA6ICJTaGlmdC1DbWQtTyIsCgkJImFjdGlvbiIgOiAib3JkZXJlZGxpc3QiCgl9LHsKCQkia2V5IiA6ICJDbWQtQWx0LUwiLAoJCSJhY3Rpb24iIDogIm9yZGVyZWRsaXN0IgoJfSx7CgkJImtleSIgOiAiU2hpZnQtQ21kLVUiLAoJCSJhY3Rpb24iIDogInVub3JkZXJlZGxpc3QiCgl9LHsKCQkia2V5IiA6ICJDbWQtJyIsCgkJImFjdGlvbiIgOiAiYmxvY2txdW90ZSIKCX0sewoJCSJrZXkiIDogIlNoaWZ0LUNtZC1CIiwKCQkiYWN0aW9uIiA6ICJibG9ja3F1b3RlIgoJfSx7CgkJImtleSIgOiAiU2hpZnQtQ21kLUMiLAoJCSJhY3Rpb24iIDogImJsb2NrcXVvdGUiCgl9LHsKCQkia2V5IiA6ICJTaGlmdC1DbWQtSSIsCgkJImFjdGlvbiIgOiAiaW1hZ2UiCgl9LHsKCQkia2V5IiA6ICJTaGlmdC1DbWQtTCIsCgkJImFjdGlvbiIgOiAibGluayIKCX0sewoJCSJrZXkiIDogIlNoaWZ0LUNtZC1UIiwKCQkiYWN0aW9uIiA6ICJ0YWJsZSIKCX0KXQ"}];
AppMain.IS_FULL_SCREEN = false;
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
AppMain.main();
})();

//# sourceMappingURL=hxmarkdowneditor.js.map